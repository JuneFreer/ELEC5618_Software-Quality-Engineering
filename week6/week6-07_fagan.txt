PhotosController


Does the objects method have necessary null or empty check?
null check of home attribute is not needed, because the value of this attribute is assigned by calling the 'PhotosController'
constructor in the 'createPhotos' method of Homecontroller, where the home parameter is referenced to the home attribute in
this Homecontroller instance.


Does the object comparison have correct operators?
Although 'fileCompressionQuality != this.fileCompressionQuality' does not compare the actual value of Float, before calling 
the setFileCompressionQuality method in the itemStateChanged of fileFormatItemListener,
the fileCompressionQuality parameter is a new Float, so the meaning of this comparison is to ensure the logic of this if
closure is proper triggered by this method chain, not the other methods.
Generally, this is not a good pratice to compare float value by just using '!=' operator.


Are all GUI elements with action listeners?
the camera of home plan is bind with HomeStoredCamerasChangeListener, that does the updatings of camera position when the camera changes.


Is there any array access might cause index out of bounds?
Not any. There is no list accessing in this class.


Are all resource released after use?
Not any. There is no resource accessing in this class.


Are all resource released operation surrounded by try catch block?
Not any. There is no resource accessing in this class.


Are all class attributes with proper Access Modifiers?
home, preferences, viewFactory and propertyChangeSupport is set to final, because home and preferences could not changes
its reference inside in this class, only use as parameter and access other methods in those objects.
viewFactory is to create any views that controller return to display of applet, should keep the reference for this controller.
propertyChangeSupport is use as a delegation to manipulate the property changes event, it should also keep the reference
in this controller.


Are all get and set method of class attributes with proper Access Modifiers?
photoView, cameras, selectedCameras, fileFormat and fileCompressionQuality all have a public get/set method.
The get method of photoView do not need to be public, because it only use in the displayView to display the view on the GUI.
All others are appropriate.


Does the classes have reasonable constructor(initialize some unnecessary variables)?
Only one constructor defined in the class, initialize all the attributes of the class and have no unused attributes.


Does switch statement has default case?
No switch closure in this class.


Is a status of thread being cleared after throw a exception?
HomeStoredCamerasChangeListener would be removed while this controller instance was garbage collected.


Are there any description for a constructor and its parameters?
No description for attributes and constructorof the class except 'Property' enumeration.


Are there any description for a class?
Only a simple description for this controller.



HomeAppletRecorder


Does the objects method have necessary null or empty check?
writeHomeURL is generated by calling getURLStringWithCodeBase in getHomeRecorder of AppletApplicaiton,
since the writeHomeURL parameter could not be null or empty due to default value set, every time writeHomeURL use
in this class, the null check is not needed.


Does the object comparison have correct operators?
deleteHomeURL is String primitive type, correct to use '!=null' in 'isHomeDeletionAvailable'.
availableHomesCache is String array, correct to use '!=null' in 'exists'.
availableHomesCacheTime is long primitive number type, correct to use '>' in 'exists'.


Are all GUI elements with action listeners?
No GUI elements exists in this class, because it only contains the operations of server transcations.


Is there any array access might cause index out of bounds?
The only array variable in this class is availableHomesCache which stores the name of home for caching purposes.
The operations involves 'availableHomesCache' are either assigning a new array or assigning the whole array to a
new variable, not possible to cause the access index of array out of scope.


Are all resource released after use?
(1) in writeHome method, the in and out putstream defined in the try/catch closure are to release after directly call disconnect of HttpURLConnection.
(2) in readHome method, the predefined URLConnection variable is to release after directly call close of DefaultHomeInputStream.
which inherits from java.io.FilterInputStream.
(3) in getAvailableHomes method, the predefined Reader variable is not guaranteed to release after throwing exception.
(4) in getHomeLength method, those LengthOutputStream and DefaultHomeOutputStream are not closed after returning.


Are all resource released operation surrounded by try catch block?
Yes, all releasing statement are surrounded by try catch block.


Are all class attributes with proper Access Modifiers?
writeHomeURL, readHomeURL, listHomesURL, deleteHomeURL and contentRecording mark as private final, since once the value is assigned in the constructor,
it is not going to change its value in other methods.


Are all get and set method of class attributes with proper Access Modifiers?
For writeHomeURL, readHomeURL, listHomesURL, deleteHomeURL and contentRecording, they do not have get/set method, since they
just use in this class for retrieving the resource.
availableHomesCacheTime attribute is used to maitain the internal cache time, no need to return it to outside.
The get method of availableHomesCache attribute is 'getAvailableHomes' , it is set to public so that could be used inside
the class and outside. Those two method calls use the availableHomesCache returning by 'getAvailableHomes' are 'exists' method
of this class and 'showOpenDialog' method in 'AppletContentManager'. 'exists' use the availableHomesCache to determine whether
specific home exists in the cache. 'showOpenDialog' use this cache objects to display the available home plan, since the final
reutrning object is set to final in this method, so it is still safe for availableHomesCache. 
But the get method of availableHomesCache should be used carefully, since other codes may modify the cache by accessing it.


Does the classes have reasonable constructor(initialise some unnecessary variables)?
All necessary attribute variables are initialised, but there some unused constructors.


Does switch statement has default case?
No switch closure in this class.


Is a status of thread being cleared after throw a exception?
no thread is used in this class.


Are there any description for a constructor and its parameters?
A short description for the purpose of the constructor, and the variable name of its parameters are self described,
their usages are simple and we could understand the purpose of them by tracing the method calls.


Are there any description for a class?
A short description for what the class does on the top of class file.
